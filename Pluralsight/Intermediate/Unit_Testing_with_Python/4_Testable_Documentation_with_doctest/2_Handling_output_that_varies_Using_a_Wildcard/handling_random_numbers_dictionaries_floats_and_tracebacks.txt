def scores_in_categories(dice, categories=(full_house, yatzy, small_straight, ones)):
	"""Score the dice in each category, with the highest scoring category first.

	>>> scores_in_catgories([1,1,2,2,2]),
	... (ones, full_house)) #doctest: +ELLIPSIS
	[(8, <function full_house at 0x...>), (2, <function ones at 0x...>)]
	"""
	scores = [(category(dice), category)
		for category in categories
		if category(dice)>0]
	return sorted(scores, reverse=True, key=itemgetter(0))
_________________________________________________________________

Match varying output:
#doctest: +ELLIPSIS


___________________________________________________________

import random

def roll(number_of_dice=5):
	"""
	Roll the indicated number of 6 sided dice using a random number generator

	>>> random.seed(1234)				# Add this line after by checking
	>>> roll(5)
	[1,1,1,4,5]
	>>> from yatzy import *
	>>> dice_counts('12345')
	Traceback...
		bla bla bla

	TypeError: must be str, not int
	"""
	return sorted(random.choice((1,2,3,4,5,6))
		for i in range(number_of_dice))


in command line:

>>> from yatzy_game import *

>>> roll(5)
[1,3,5,5,6]
>>> roll(5)
[1,1,2,2,6]
>>> roll(5)
[1,1,1,3,4]

>>> random.seed(1234)

>>> roll(5)
[1,1,1,4,5]
>>> random.seed(1234)
>>> roll(5)
[1,1,1,4,5]

______________________________________________________________________

def dice_counts(dice):
	"""Make a dictionary of how many of each value are in the dice

	>>> dice_counts([1,2,2,3,3])
	{1: 1, 2: 2, 3: 2, 4: 0, 5: 0, 6: 0}

	>>> dice_counts('12345') #doctest: + IGNORE_EXCEPTION_DETAIL	# We can put this here, but without this we pass the test...
	Traceback...
	...								#wildcard
	TypeError: Can't convert 'int' object to str implicitly		#Change this to:
	"""
	return {x: dice.count(x) for x in range(1,7)}


in cmd:

>>> from yatzy import *
>>> dice_counts('12345')
Traceback...
	bla bla bla

TypeError: must be str, not int



doctest ignore text after Traceback ang go directly to TypeError